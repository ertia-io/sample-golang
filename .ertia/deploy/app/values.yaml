# Default values for app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
#
replicaCount: 1

image:
  repository: registry.demo.ertia.cloud/demo/app
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets:
  - name: tekton-harbor-regcred
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 3000
  
probe:
  liveness:
    path: /status
  rediness:
    path: /status

ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: traefik
    cert-manager.io/cluster-issuer: letsencrypt-production
  hosts:
    - host: app.demo.ertia.cloud
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: app-tls
      hosts:
        - app.demo.ertia.cloud

grafana:
  dashboard: {}
    # label: "grafana_dashboard""
    # folderLabel: "grafana_folder"

metrics:
  serviceMonitor:
    enabled: false
    # Specify metrics port. Use only if exposed metrics are not on service.port
    port: 9876
    # path: /metrics
    # interval:
    # scrapeTimeout:
    additionalLabels:
      release: monitoring

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  
env:
  enabled: true
  variables:

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
